{"version":3,"sources":["app.js","controller.js","directive.js","factory.js","router.js","socket.js"],"names":["app","angular","module","run","$templateCache","put","controller","$rootScope","totalHints","isSignin","currentRoom","$scope","$window","socket","AuthFactory","HintFactory","isNeedFoldCurrent","isNeedFoldCache","minWindowSize","isAuth","checkAuth","emit","getAuth","id","isChatroomAccess","isFolded","document","documentElement","offsetWidth","toggleNavbar","onresize","$apply","on","getHintsCount","data","console","log","status","error","checkNotAuth","toggleSignin","login","loginEmail","loginPassword","email","password","code","setAuth","$watchGroup","newVal","isMatch","signin","signinEmail","signinUsername","signinPassword","signinSignature","username","signature","RoomFactory","logout","user","exit","userId","removeAuth","FriendFactory","getOne","$timeout","$location","updateRoom","room","checkSelf","checkFriends","friends","length","indexOf","checkAccess","isShowRoomInfo","message","timer","convertIdToUsername","input","i","sendMessage","content","date","moment","format","typing","members","isSelf","push","typingUsername","cancel","isTyping","getAll","path","SearchFactory","selfId","searchFriendContent","noSearchResult","isApplied","searchResult","search","searchUser","pullRequest","targetId","hintContent","self","this","hintType","senderId","senderName","mark","accept","applyContent","addFriend","toBeFriends","isMarked","isAccepted","getAllHints","hintsList","markHint","acceptHint","NewsFactory","updateNews","page","newsList","updateFriends","updateRooms","getRooms","rooms","isCreateRoom","isChecked","writeContent","isShowSelfInfo","isShowFriends","isShowRooms","hasNext","loadNextPage","toggleCheck","index","splice","finish","create","roomInfo","createrId","createdDate","Date","currentMembers","join","roomId","isMarkdown","createNews","publishId","publishContent","isEdit","toggleEdit","newsId","newsContent","saveNews","editContentResult","save","removeNews","remove","supportNews","support","supporter","saveUserInfo","directive","restrict","templateUrl","get","factory","$http","$cookies","baseUrl","success","post","target","getObject","putObject","config","$stateProvider","$urlRouterProvider","state","url","otherwise","socketFactory","io","connect","mySocket","ioSocket"],"mappings":"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","file":"all.min.js","sourcesContent":["/**\n * Main Angular Module\n */\nvar app = angular.module(\"app\", ['ui.router','ngCookies','btford.socket-io','ngSanitize']);\n\n\n\t/*\n\t\tCache the templete before load it .\n\t */\n\tapp.run(['$templateCache', function ($templateCache) {\n\t\t$templateCache.put('header.html','../views/templates/header.html');\n\t\t$templateCache.put('footer.html','../views/templates/footer.html');\n\t}]);\n\n\n","(function() {\n\n\tapp\n\t\t.controller('BodyController', ['$rootScope', function ($rootScope){\n\t\t\t\n\t\t\t$rootScope.totalHints = 0;\n\t\t\t$rootScope.isSignin = false;\n\t\t\t$rootScope.currentRoom = '';\n\n\t\t}])\n\t\t.controller('NavbarController', ['$scope','$rootScope','$window','socket','AuthFactory','HintFactory', function ($scope, $rootScope, $window, socket, AuthFactory, HintFactory){\n\n\t\t\tvar isNeedFoldCurrent,\n\t\t\t\tisNeedFoldCache,\n\t\t\t\tminWindowSize = 768;\n\n\t\t\t$rootScope.isAuth = AuthFactory.checkAuth('User');\n\t\t\tif(AuthFactory.checkAuth('User')) {\n\t\t\t\tsocket.emit('update hints', AuthFactory.getAuth('User').id);\n\t\t\t\tif(AuthFactory.getAuth('User').currentRoom) {\n\t\t\t\t\t$rootScope.isChatroomAccess = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$scope.isFolded = isNeedFoldCache = isNeedFoldCurrent =  $window.document.documentElement.offsetWidth < minWindowSize ? true : false;\n\n\t\t\t$scope.toggleNavbar = function () {\n\t\t\t\tif(isNeedFoldCurrent) {\n\t\t\t\t\t$scope.isFolded = !$scope.isFolded;\n\t\t\t\t}else{\n\t\t\t\t\t$scope.isFolded = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$window.onresize = function() {\n\t\t\t\tisNeedFoldCurrent = $window.document.documentElement.offsetWidth < 768 ? true : false\n\t\t\t\tif(isNeedFoldCache !== isNeedFoldCurrent) {\n\t\t\t\t\t$scope.isFolded = isNeedFoldCache = isNeedFoldCurrent;\n\t\t\t\t\t$scope.$apply();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsocket.on('update hints',function (id) {\n\t\t\t\tif(AuthFactory.getAuth('User') && AuthFactory.getAuth('User').id === id) {\n\t\t\t\t\tHintFactory.getHintsCount(AuthFactory.getAuth('User').id + '/' + false, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t$rootScope.totalHints = data.data;\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}])\n\t\t.controller('LoginController', ['$scope','$rootScope', 'AuthFactory', 'socket', function ($scope, $rootScope, AuthFactory, socket){\n\t\t\t\n\t\t\tAuthFactory.checkNotAuth('User');\n\n\t\t\t$scope.toggleSignin = function () {\n\t\t\t\t$rootScope.isSignin = !$rootScope.isSignin;\n\t\t\t}\n\n\t\t\t$scope.login = function () {\n\t\t\t\tif($scope.loginEmail && $scope.loginPassword) {\n\n\t\t\t\t\tAuthFactory.login({\n\t\t\t\t\t\temail: $scope.loginEmail, \n\t\t\t\t\t\tpassword: $scope.loginPassword\n\t\t\t\t\t},function (data) {\n\t\t\t\t\t\tif(data.status.code === 404) {\n\t\t\t\t\t\t\tAuthFactory.checkAuth('User');\n\t\t\t\t\t\t\t$scope.loginEmail = data.data.email;\n\t\t\t\t\t\t\t$scope.loginPassword = data.data.password;\n\t\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t}else if(data.status.code === 409) {\n\t\t\t\t\t\t\tAuthFactory.checkAuth('User');\n\t\t\t\t\t\t\t$scope.loginEmail = data.data.email;\n\t\t\t\t\t\t\t$scope.loginPassword = data.data.password;\n\t\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t}else if(data.status.code === 200){\n\t\t\t\t\t\t\tAuthFactory.setAuth('User',data.data);\n\t\t \t\t\t\t\t$rootScope.isAuth = AuthFactory.checkAuth('User');\n\t\t\t\t\t\t\t$rootScope.isChatroomAccess = false;\n\t\t\t\t\t\t\tsocket.emit('update hints', AuthFactory.getAuth('User').id);\n\t\t\t\t\t\t\tsocket.emit('update friends', AuthFactory.getAuth('User').id);\n\t\t \t\t\t\t\tAuthFactory.checkNotAuth('User');\n\t\t \t\t\t\t\tconsole.log(data.status)\n\t\t\t\t\t\t}\n\t\t\t\t\t},function(error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t}])\n\t\t.controller('SigninController', ['$scope', '$rootScope', 'AuthFactory', 'socket', function ($scope, $rootScope, AuthFactory, socket){\n\t\t\t\n\t\t\tAuthFactory.checkAuth('User');\n\n\t\t\t$scope.$watchGroup(['signinPassword','signinConfiration'], function (newVal) {\n\t\t\t\t$scope.isMatch = newVal[0] === newVal[1];\n\t\t\t});\n\n\t\t\t$scope.signin = function () {\n\t\t\t\tif($scope.signinEmail && $scope.signinUsername && $scope.signinPassword && $scope.signinSignature) {\n\n\t\t\t\t\tAuthFactory.signin({\n\t\t\t\t\t\tusername: $scope.signinUsername,\n\t\t\t\t\t\tpassword: $scope.signinPassword,\n\t\t\t\t\t\temail: $scope.signinEmail,\n\t\t\t\t\t\tsignature: $scope.signinSignature\n\t\t\t\t\t},function (data) {\n\t\t\t\t\t\tif(data.status.code === 409) {\n\t\t\t\t\t\t\tAuthFactory.checkAuth('User');\n\t\t\t\t\t\t\t$scope.signinUsername = data.data.username;\n\t\t\t\t\t\t\t$scope.signinPassword = data.data.password;\n\t\t\t\t\t\t\t$scope.signinEmail = data.data.email;\n\t\t\t\t\t\t\t$scope.signinSignature = data.data.signature;\n\t\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t}else if(data.status.code === 200){\n\t\t\t\t\t\t\tAuthFactory.setAuth('User',data.data);\n\t\t\t\t\t\t\t$rootScope.isAuth = AuthFactory.checkAuth('User');\n\t\t\t\t\t\t\t$rootScope.isChatroomAccess = false;\n\t\t\t\t\t\t\tAuthFactory.checkNotAuth('User');\n\t\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t}\n\t\t\t\t\t},function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t}])\n\t\t.controller('LogoutController', ['$scope','$rootScope','socket', 'AuthFactory','RoomFactory', function ($scope, $rootScope, socket, AuthFactory, RoomFactory){\n\t\t\t\n\t\t\tAuthFactory.checkAuth('User');\n\t\t\t$scope.logout = function () {\n\t\t\t\tvar user = AuthFactory.getAuth('User');\n\t\t\t\tif(user.currentRoom) {\n\t\t\t\t\tRoomFactory.exit({\n\t\t\t\t\t\tuserId: user.id\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tsocket.emit('update room info', user.currentRoom);\n\t\t\t\t\t}, function (error) {\n\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tAuthFactory.logout({\n\t\t\t\t\tid: user.id\n\t\t\t\t}, function (data) {\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\tsocket.emit('update friends',user.id);\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\n\t\t\t\t$rootScope.isAuth = false;\n\t\t\t\t$rootScope.username = null;\n\t\t\t\t$rootScope.totalHints = 0;\n\t\t\t\tAuthFactory.removeAuth('User');\n\t\t\t\tAuthFactory.checkAuth('User');\n\t\t\t}\n\t\t}])\n\t\t.controller('UserInfoController',['$scope', '$rootScope', 'socket', 'AuthFactory','FriendFactory', function ($scope, $rootScope, socket, AuthFactory, FriendFactory) {\n\t\t\t\n\t\t\tif(AuthFactory.checkAuth('User')) {\n\n\t\t\t\tFriendFactory.getOne(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t$rootScope.username = data.data.username;\n\t\t\t\t\t$scope.signature = data.data.signature;\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\t\t}])\n\t\t.controller('ChatController', ['$scope', '$rootScope', '$timeout','$location', '$window', 'socket', 'AuthFactory','FriendFactory','RoomFactory', function ($scope, $rootScope, $timeout, $location, $window, socket, AuthFactory, FriendFactory, RoomFactory) {\n\t\t\tAuthFactory.checkAuth('User');\n\t\t\tRoomFactory.checkAccess('User');\n\n\t\t\tif(RoomFactory.checkAccess('User')) {\n\n\t\t\t\tsocket.emit('update room info',AuthFactory.getAuth('User').currentRoom);\n\t\t\t}\n\n\t\t\tvar minWindowSize = 768;\n\t\t\t$scope.isShowRoomInfo = $window.document.documentElement.offsetWidth < minWindowSize ? false : true;\n\n\t\t\t$scope.message = [];\n\t\t\tvar timer;\n\n\t\t\t$scope.convertIdToUsername = function (input, data){\n\t\t\t\t\t\n\t\t\t\tif(AuthFactory.checkAuth('User') && input) {\n\n\t\t\t\t\tif(input === AuthFactory.getAuth('User').id) {\n\t\t\t\t\t\treturn AuthFactory.getAuth('User').username;\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tvar friends = data || [];\n\t\t\t\t\t\tvar length = friends.length;\n\n\t\t\t\t\t\tfor(var i=0; i<length;i++) {\n\t\t\t\t\t\t\tif(input === friends[i]['_id']) {\n\t\t\t\t\t\t\t\treturn friends[i]['username'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction updateRoom() {\n\t\t\t\tRoomFactory.getOne(AuthFactory.getAuth('User').currentRoom, function (data) {\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t$scope.room = data.data;\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsocket.on('update room info', function (id) {\n\t\t\t\tif(AuthFactory.getAuth('User') && id === AuthFactory.getAuth('User').currentRoom) {\n\t\t\t\t\tupdateRoom();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$scope.sendMessage = function(content) {\n\t\t\t\tif(content && AuthFactory.getAuth('User').currentRoom) {\n\t\t\t\t\tsocket.emit('send message',{\n\t\t\t\t\t\tusername: AuthFactory.getAuth('User').username,\n\t\t\t\t\t\tid: AuthFactory.getAuth('User').id,\n\t\t\t\t\t\tmessage: content,\n\t\t\t\t\t\tdate: moment().format('HH:mm:ss'),\n\t\t\t\t\t\tcurrentRoom: AuthFactory.getAuth('User').currentRoom\n\t\t\t\t\t});\n\t\t\t\t\t$scope.content = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$scope.typing = function () {\n\t\t\t\tsocket.emit('typing', AuthFactory.getAuth('User').username);\n\t\t\t}\n\n\t\t\tsocket.on('receive message', function (data) {\n\t\t\t\tif($scope.room.members.indexOf(data.id) >= 0 && data.currentRoom == AuthFactory.getAuth('User').currentRoom) {\n\t\t\t\t\tif(checkSelf(data)) {\n\t\t\t\t\t\tdata.isSelf = checkSelf(data);\n\t\t\t\t\t\t$scope.message.push(data);\n\t\t\t\t\t}\n\t\t\t\t\tif(checkFriends(data)) {\n\t\t\t\t\t\t$scope.message.push(data);\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsocket.on('typing', function (username) {\n\n\t\t\t\t$scope.typingUsername = username;\n\t\t\t\tif(timer){\n\t\t\t\t\t$timeout.cancel(timer);\n\t\t\t\t}\n\t\t\t\ttimer = $timeout(function(){\n\t\t\t\t\t$scope.isTyping = false;\n\t\t\t\t},350);\n\t\t\t\t$scope.isTyping = true;\t\t\t\t\t\n\t\t\t});\n\n\t\t\tfunction checkSelf(data) {\n\t\t\t\treturn data.id == AuthFactory.getAuth('User').id ? true : false;\n\t\t\t}\n\n\t\t\tfunction checkFriends(data) {\n\t\t\t\tvar friends = AuthFactory.getAuth('User').friends;\n\t\t\t\tif(friends && friends.length) {\n\t\t\t\t\treturn friends.indexOf(data.id) >= 0 ? true : false ;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tFriendFactory.getAll(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t$scope.friends = data.data;\n\t\t\t}, function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\n\t\t\t$scope.exit = function() {\n\t\t\t\tRoomFactory.exit({\n\t\t\t\t\tuserId: AuthFactory.getAuth('User').id\n\t\t\t\t}, function (data) {\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\tsocket.emit('update room info',AuthFactory.getAuth('User').currentRoom);\n\t\t\t\t\t$rootScope.isChatroomAccess = false;\n\t\t\t\t\t$location.path('/circle');\n\t\t\t\t\t$rootScope.currentRoom = '';\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\t\t}])\n\t\t.controller('SearchFriendController', ['$scope', 'socket', 'AuthFactory', 'SearchFactory','HintFactory', function ($scope, socket, AuthFactory, SearchFactory, HintFactory) {\n\t\t\t\n\t\t\tAuthFactory.checkAuth('User');\n\n\t\t\t$scope.friends = AuthFactory.getAuth('User').friends;\n\t\t\t$scope.selfId = AuthFactory.getAuth('User').id;\n\t\t\t$scope.searchFriendContent = '';\n\t\t\t$scope.noSearchResult = false;\n\t\t\t$scope.isApplied = false;\n\t\t\t$scope.searchResult = null;\n\n\t\t\t$scope.search = function() {\n\n\t\t\t\tSearchFactory.searchUser({\n\t\t\t\t\tcontent:$scope.searchFriendContent\n\t\t\t\t}, function (data) {\n\t\t\t\t\tif(data.data && data.data.length) {\n\t\t\t\t\t\t$scope.searchResult = data.data;\n\t\t\t\t\t\t$scope.noSearchResult = false;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$scope.searchResult = null;\n\t\t\t\t\t\t$scope.noSearchResult = true;\n\t\t\t\t\t}\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t\t$scope.searchFriendContent = '';\n\t\t\t}\n\n\t\t\t$scope.pullRequest = function(targetId, hintContent) {\n\t\t\t\tvar self = this;\n\t\t\t\tif(targetId !== AuthFactory.getAuth('User').id) {\n\t\t\t\t\t\n\t\t\t\t\tHintFactory.pullRequest({\n\t\t\t\t\t\ttargetId: targetId,\n\t\t\t\t\t\thintType: 'friend request',\n\t\t\t\t\t\thintContent: hintContent,\n\t\t\t\t\t\tsenderId: AuthFactory.getAuth('User').id,\n\t\t\t\t\t\tsenderName: AuthFactory.getAuth('User').username,\n\t\t\t\t\t\tmark: false,\n\t\t\t\t\t\taccept: false\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tsocket.emit('update hints',targetId);\n\t\t\t\t\t\tself.isApplied = true;\n\t\t\t\t\t\tself.applyContent = '';\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}])\n\t\t.controller('HintController', ['$scope', '$rootScope','socket', 'AuthFactory', 'HintFactory','FriendFactory', function ($scope, $rootScope, socket, AuthFactory, HintFactory, FriendFactory){\n\t\t\t\n\t\t\tAuthFactory.checkAuth('User');\n\n\t\t\t$scope.isMarked = false;\n\t\t\t$scope.isAccepted = false;\n\t\t\t$scope.friends = AuthFactory.getAuth('User').friends;\n\n\t\t\tHintFactory.getAllHints(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\tconsole.log(data.status);\n\t\t\t\t$scope.hintsList = data.data;\n\t\t\t}, function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\n\t\t\t$scope.mark = function(id) {\n\t\t\t\tvar self = this;\n\t\t\t\tHintFactory.markHint({\n\t\t\t\t\ttargetId: AuthFactory.getAuth('User').id,\n\t\t\t\t\tid: id\n\t\t\t\t}, function (data) {\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\tself.isMarked = true;\n\t\t\t\t\t$rootScope.totalHints = $rootScope.totalHints - 1;\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\t\t\t$scope.accept = function(id) {\n\t\t\t\tvar self = this;\n\t\t\t\tHintFactory.acceptHint({\n\t\t\t\t\ttargetId: AuthFactory.getAuth('User').id,\n\t\t\t\t\tid: id\n\t\t\t\t}, function (data) {\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\tif(!data.data.mark) {\n\t\t\t\t\t\tself.isMarked = true;\n\t\t\t\t\t\t$rootScope.totalHints = $rootScope.totalHints - 1;\n\t\t\t\t\t}\n\t\t\t\t\taddFriend(data.data.targetId,data.data.senderId);\n\t\t\t\t\tself.isAccepted = true;\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction addFriend(targetId,senderId) {\n\n\t\t\t\tFriendFactory.toBeFriends({\n\t\t\t\t\ttargetId: targetId,\n\t\t\t\t\tsenderId: senderId\n\t\t\t\t}, function (data) {\n\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\tFriendFactory.getOne(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t\t\tAuthFactory.setAuth('User', data.data);\n\t\t\t\t\t\t\n\t\t\t\t\t\tHintFactory.pullRequest({\n\t\t\t\t\t\t\ttargetId: senderId,\n\t\t\t\t\t\t\thintType: 'accept request',\n\t\t\t\t\t\t\thintContent: 'i accept your request , we are friend now .',\n\t\t\t\t\t\t\tsenderId: AuthFactory.getAuth('User').id,\n\t\t\t\t\t\t\tsenderName: AuthFactory.getAuth('User').username,\n\t\t\t\t\t\t\tmark: false,\n\t\t\t\t\t\t\taccept: true\n\t\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t\tsocket.emit('update hints', senderId);\n\t\t\t\t\t\t\tsocket.emit('update friends',AuthFactory.getAuth('User').id);\n\t\t\t\t\t\t\n\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t\t\n\n\t\t\t}\n\n\t\t}])\n\t\t.controller('CircleController', ['$scope', '$rootScope', '$location', '$window','socket', 'AuthFactory','HintFactory','FriendFactory', 'NewsFactory','RoomFactory', function ($scope, $rootScope, $location, $window, socket, AuthFactory, HintFactory, FriendFactory, NewsFactory, RoomFactory){\n\t\t\t\n\t\t\tif(AuthFactory.checkAuth('User')) {\n\t\t\t\tFriendFactory.getOne(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\tAuthFactory.setAuth('User', data.data);\n\t\t\t\t}, function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\n\t\t\t\tupdateFriends();\n\t\t\t\tupdateRooms();\n\t\t\t\tupdateNews();\n\n\t\t\t\t\n\n\t\t\t\t$rootScope.currentRoom = AuthFactory.getAuth('User').currentRoom;\n\n\t\t\t\t$scope.isCreateRoom = false;\n\t\t\t\t$scope.isChecked = false;\n\t\t\t\t$scope.members = [];\n\t\t\t\t$scope.writeContent = '';\n\t\t\t\t$scope.selfId = AuthFactory.getAuth('User').id;\n\t\t\t\t$scope.page = 1;\n\n\n\t\t\t\tvar minWindowSize = 768;\n\t\t\t\t$scope.isShowSelfInfo = $scope.isShowFriends = $scope.isShowRooms = $window.document.documentElement.offsetWidth < minWindowSize ? false : true;\n\t\t\t\t\n\t\t\t\t$scope.convertIdToUsername = function (input, data){\n\t\t\t\t\t\n\t\t\t\t\tif(AuthFactory.checkAuth('User') && input) {\n\n\t\t\t\t\t\tif(input === AuthFactory.getAuth('User').id) {\n\t\t\t\t\t\t\treturn AuthFactory.getAuth('User').username;\n\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\tvar friends = data || [];\n\t\t\t\t\t\t\tvar length = friends.length;\n\n\t\t\t\t\t\t\tfor(var i=0; i<length;i++) {\n\t\t\t\t\t\t\t\tif(input === friends[i]['_id']) {\n\t\t\t\t\t\t\t\t\treturn friends[i]['username'];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction updateNews(page){\n\t\t\t\t\tNewsFactory.getAll(AuthFactory.getAuth('User').id + '/' + page, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t$scope.newsList = data.data;\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsocket.on('update news',function (id) {\n\t\t\t\t\tif(AuthFactory.checkAuth('User')) {\n\t\t\t\t\t\tvar user = AuthFactory.getAuth('User');\n\t\t\t\t\t\tif(user.id === id || user.friends.indexOf(id) >= 0) {\n\t\t\t\t\t\t\tupdateNews($scope.page);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.hasNext = true;\n\t\t\t\t$scope.loadNextPage = function () {\n\t\t\t\t\tif($scope.newsList && $scope.newsList.length < $scope.page * 7) {\n\t\t\t\t\t\t$scope.hasNext = false;\n\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$scope.hasNext = true;\n\t\t\t\t\t\t$scope.page = $scope.page + 1;\n\t\t\t\t\t\tupdateNews($scope.page);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction updateFriends(){\n\t\t\t\t\tFriendFactory.getAll(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t\t\t$scope.friends = data.data;\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsocket.on('update friends',function(id){\n\t\t\t\t\tif(AuthFactory.checkAuth('User')) {\n\t\t\t\t\t\tvar user = AuthFactory.getAuth('User');\n\t\t\t\t\t\tif(user.id === id || user.friends.indexOf(id) >= 0) {\n\t\t\t\t\t\t\tupdateFriends();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfunction updateRooms(){\n\t\t\t\t\tRoomFactory.getRooms(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\t$scope.rooms = data.data;\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tsocket.on('update rooms', function (members) {\n\t\t\t\t\tif(members.indexOf(AuthFactory.getAuth('User').id) >= 0) {\n\t\t\t\t\t\tupdateRooms();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tfunction updateSelf(){\n\t\t\t\t\tFriendFactory.getOne(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t\t\t$rootScope.username = data.username;\n\t\t\t\t\t\t$rootScope.signature = data.signature;\n\t\t\t\t\t\tconsole.log($rootScope.username,$rootScope.signature);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$scope.toggleCheck = function (id) {\n\t\t\t\t\tif($scope.members.indexOf(id) >= 0) {\n\t\t\t\t\t\tvar index = $scope.members.indexOf(id);\n\t\t\t\t\t\t$scope.members.splice(index,1);\n\t\t\t\t\t\tthis.isChecked = false;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$scope.members.push(id);\n\t\t\t\t\t\tthis.isChecked = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t$scope.finish = function () {\n\t\t\t\t\t$scope.members.push(AuthFactory.getAuth('User').id);\n\t\t\t\t\tRoomFactory.create({\n\t\t\t\t\t\troomInfo: $scope.roomInfo,\n\t\t\t\t\t\tcreaterId: AuthFactory.getAuth('User').id,\n\t\t\t\t\t\tcreatedDate: new Date(),\n\t\t\t\t\t\tmembers: $scope.members,\n\t\t\t\t\t\tcurrentMembers: []\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tsocket.emit('update rooms',data.data.members);\n\t\t\t\t\t\t$scope.roomInfo = '';\n\t\t\t\t\t\t$scope.members = [];\n\t\t\t\t\t\t$scope.isCreateRoom = false;\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$scope.join = function (roomId) {\n\t\t\t\t\tRoomFactory.join({\n\t\t\t\t\t\tuserId: AuthFactory.getAuth('User').id,\n\t\t\t\t\t\troomId: roomId\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tFriendFactory.getOne(AuthFactory.getAuth('User').id, function (data) {\n\t\t\t\t\t\t\tAuthFactory.setAuth('User',data.data);\n\t\t\t\t\t\t\t$rootScope.isChatroomAccess = true;\n\t\t\t\t\t\t\t$rootScope.currentRoom = roomId;\n\t\t\t\t\t\t\t$location.path('/chatroom');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t$scope.isMarkdown = false;\n\t\t\n\t\t\t\t$scope.createNews = function(){\n\t\t\t\t\tNewsFactory.create({\n\t\t\t\t\t\tpublishId: AuthFactory.getAuth('User').id,\n\t\t\t\t\t\tpublishContent: $scope.writeContent,\n\t\t\t\t\t\tisMarkdown: $scope.isMarkdown\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tsocket.emit('update news',AuthFactory.getAuth('User').id);\n\t\t\t\t\t\t$scope.writeContent = '';\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t})\n\t\t\t\t\t$scope.isMarkdown = false;\n\t\t\t\t}\n\n\n\t\t\t\t$scope.isEdit = false;\n\n\t\t\t\t$scope.toggleEdit = function (newsId,newsContent) {\n\t\t\t\t\tif(this.isEdit === false) {\n\t\t\t\t\t\tthis.isEdit = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.isEdit = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\t$scope.saveNews = function (newsId,editContentResult) {\n\t\t\t\t\tthis.isEdit = false;\n\n\t\t\t\t\tNewsFactory.save({\n\t\t\t\t\t\tnewsId: newsId,\n\t\t\t\t\t\tpublishContent: editContentResult\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tsocket.emit('update news', AuthFactory.getAuth('User').id);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$scope.removeNews = function (newsId) {\n\t\t\t\t\tNewsFactory.remove({\n\t\t\t\t\t\tnewsId: newsId\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tsocket.emit('update news', AuthFactory.getAuth('User').id);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t$scope.supportNews = function (newsId) {\n\t\t\t\t\tNewsFactory.support({\n\t\t\t\t\t\tnewsId: newsId,\n\t\t\t\t\t\tsupporter: AuthFactory.getAuth('User').id\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tsocket.emit('update news', AuthFactory.getAuth('User').id);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t$scope.saveUserInfo = function (username,signature) {\n\t\t\t\t\tthis.isEdit = false;\n\n\t\t\t\t\tFriendFactory.save({\n\t\t\t\t\t\tuserId: AuthFactory.getAuth('User').id,\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tsignature: signature\n\t\t\t\t\t}, function (data) {\n\t\t\t\t\t\tconsole.log(data.status);\n\t\t\t\t\t\tvar user = AuthFactory.getAuth('User');\n\t\t\t\t\t\tuser.username = data.data.username;\n\t\t\t\t\t\tuser.signature = data.data.signature;\n\t\t\t\t\t\tAuthFactory.setAuth('User', user);\n\n\t\t\t\t\t\t$rootScope.username = data.data.username;\n\n\t\t\t\t\t\tsocket.emit('update friends', AuthFactory.getAuth('User').id);\n\t\t\t\t\t}, function (error) {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}])\n\t\t\n})();\n\n","(function() {\n\n\tapp\n\t\t.directive('headertemplate', ['$templateCache', function ($templateCache) {\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplateUrl: $templateCache.get('header.html')\n\t\t\t}\n\t\t}])\n\t\t.directive('footertemplate',['$templateCache', function ($templateCache) {\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplateUrl: $templateCache.get('footer.html')\n\t\t\t}\n\t\t}])\n\n})();\n\n\n","(function () {\n\n\tapp\n\t\t.factory('AuthFactory', ['$http', '$cookies', '$location', '$rootScope', function ($http, $cookies, $location, $rootScope) {\n\t\t\t\n\t\t\tvar baseUrl = 'http://localhost:3000';\n\n\t\t\treturn {\n\t\t\t\tlogin: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/login', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tsignin: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/signin', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tlogout: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/logout', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tcheckAuth: function (target) {\n\t\t\t\t\tif(!$cookies.getObject(target)) {\n\t\t\t\t\t\t$location.path('/auth');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tcheckNotAuth: function (target) {\n\t\t\t\t\tif($cookies.getObject(target)) {\n\t\t\t\t\t\t$location.path('/circle');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetAuth: function(target, data) {\n\t\t\t\t\t$cookies.putObject(target,data);\n\t\t\t\t},\n\t\t\t\tgetAuth: function(target) {\n\t\t\t\t\treturn $cookies.getObject(target)\n\t\t\t\t},\n\t\t\t\tremoveAuth: function(target) {\n\t\t\t\t\t$cookies.remove(target);\n\t\t\t\t}\n\t\t\t}\n\t\t}])\n\t\t.factory('SearchFactory', ['$http', function ($http){\n\t\t\tvar baseUrl = 'http://localhost:3000';\n\n\t\t\treturn {\n\t\t\t\tsearchUser: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/search', data).success(success).error(error);\n\t\t\t\t}\n\t\t\t};\n\t\t}])\n\t\t.factory('HintFactory', ['$http', function ($http){\n\t\t\tvar baseUrl = 'http://localhost:3000';\n\n\t\t\treturn {\n\t\t\t\tgetHintsCount: function (data, success, error) {\n\t\t\t\t\t$http.get(baseUrl + '/hints/count/' + data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tgetAllHints: function (data, success, error) {\n\t\t\t\t\t$http.get(baseUrl + '/hints/all/' + data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tpullRequest: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/hint', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tmarkHint: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/hint/mark', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tacceptHint: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/hint/accept', data).success(success).error(error);\n\t\t\t\t}\n\t\t\t};\n\t\t}])\n\t\t.factory('FriendFactory', ['$http', function ($http){\n\t\t\tvar baseUrl = 'http://localhost:3000';\n\n\t\t\treturn {\n\t\t\t\tgetAll: function (data, success, error) {\n\t\t\t\t\t$http.get(baseUrl + '/friends/all/' + data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tgetOne: function (data, success, error) {\n\t\t\t\t\t$http.get(baseUrl + '/user/' + data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\ttoBeFriends: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/friend/accept', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tsave: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/user/save', data).success(success).error(error);\n\t\t\t\t}\n\t\t\t};\n\t\t}])\n\t\t.factory('NewsFactory', ['$http', function ($http){\n\t\t\tvar baseUrl = 'http://localhost:3000';\n\n\t\t\treturn {\n\t\t\t\tgetAll: function (data, success, error) {\n\t\t\t\t\t$http.get(baseUrl + '/news/all/' + data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tcreate: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/news/create', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tsave: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/news/save', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tremove: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/news/remove', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tsupport: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/news/support', data).success(success).error(error);\n\t\t\t\t}\n\t\t\t};\n\t\t}])\n\t\t.factory('RoomFactory', ['$http','$location','AuthFactory', function ($http, $location, AuthFactory){\n\t\t\tvar baseUrl = 'http://localhost:3000';\n\n\t\t\treturn {\n\t\t\t\tcheckAccess: function (target) {\n\t\t\t\t\tif(!AuthFactory.getAuth(target).currentRoom) {\n\t\t\t\t\t\t$location.path('/circle');\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tgetOne: function (data, success, error) {\n\t\t\t\t\t$http.get(baseUrl + '/room/' + data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tgetRooms: function (data, success, error) {\n\t\t\t\t\t$http.get(baseUrl + '/rooms/' + data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tcreate: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/room/create', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\tjoin: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/room/join', data).success(success).error(error);\n\t\t\t\t},\n\t\t\t\texit: function (data, success, error) {\n\t\t\t\t\t$http.post(baseUrl + '/room/exit', data).success(success).error(error);\n\t\t\t\t}\n\t\t\t};\n\t\t}])\n\n})();","(function () {\n\n\tapp\n\t\t.config(['$stateProvider', '$urlRouterProvider', function ($stateProvider, $urlRouterProvider) {\n\t\t\t$stateProvider\n\t\t\t\t.state('auth', {\n\t\t\t\t\turl: '/auth',\n\t\t\t\t\ttemplateUrl: '../views/templates/auth.html'\n\t\t\t\t})\n\t\t\t\t.state('search', {\n\t\t\t\t\turl: '/search',\n\t\t\t\t\ttemplateUrl: '../views/templates/search.html'\n\t\t\t\t})\n\t\t\t\t.state('circle', {\n\t\t\t\t\turl: '/circle',\n\t\t\t\t\ttemplateUrl: '../views/templates/circle.html'\n\t\t\t\t})\n\t\t\t\t.state('chatroom', {\n\t\t\t\t\turl: '/chatroom',\n\t\t\t\t\ttemplateUrl: '../views/templates/chatroom.html'\n\t\t\t\t})\n\t\t\t\t.state('hint', {\n\t\t\t\t\turl: '/hint',\n\t\t\t\t\ttemplateUrl: '../views/templates/hint.html'\n\t\t\t\t})\n\n\t\t\t$urlRouterProvider.otherwise('/auth');\n\n\t\t}])\n\n})();","(function() {\n\n\tapp\n\t\t.factory('socket', ['socketFactory', function(socketFactory){\n\n\t\t\tvar socket = io.connect('http://localhost:3000');\n\n\t\t\tmySocket = socketFactory({\n\t\t\t\tioSocket: socket\n\t\t\t});\n\t\t\treturn mySocket;\n\t\t}])\n\n})();"],"sourceRoot":"/source/"}